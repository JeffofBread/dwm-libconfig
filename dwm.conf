
themes = (
        {
                font = "monospace:size=10";

                normal-foreground = "#bbbbbb";
                normal-background = "#222222";
                normal-border = "#444444";

                selected-foreground = "#eeeeee";
                selected-background = "#005577";
                selected-border = "#005577";
        }
);

rules = (
        {
                class = "Gimp";
                instance = "NULL";
                title = "NULL";
                tag-mask = 0;
                floating = true;
                monitor = -1;
        },
        {
               class = "Firefox";
               instance = "NULL";
               title = "NULL";
               tag-mask = 256; # Same as `1 << 8` in C
               floating = true;
               monitor = -1;
        }
);

tag-names = (
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9"
);

# Warnings:
#       1) Make sure the line is appended with a comma,
#          because without it libconfig will think it is
#          a single multi-line keybind
#
#       2) The keysym part of the keybind (ex. Q, A, Return)
#          can be case sensitive. Basic alphabetical characters
#          should not be an issue, but things like `Grave` or
#          `Return` MUST be capitalized to work. Others, like
#          `Scroll_Lock` are both capitalized and seperated by
#          an underscore. I recommend using xev to check how
#          a bind is spelled.
#
# The keybinds are structured as follows
#       1) Modifier(s). This is an optional part of the bind that defines
#          another special key that must be pressed with your main key.
#          Modifier(s) must be seperated by '+' from the main key and other
#          modifiers. A list of all modifiers is below. You can use a max
#          of 3 modifiers.
#
#       2) Main key. This is a required part of the bind, and defines the
#          main key required to envoke the defined function. The main key
#          must be seperated from any modifiers with a '+', and seperated
#          from the function with a comma. It is recommended to use a
#          program like `xev` to find the name of the key. Note,
#          capitalization is important in many cases, though dwm will try
#          and correct for SOME of this (like with A-Z characters).
#
#       3) Function. This is the function that will be invoked when the key
#          combination is pressed. It also determines the type of argument
#          (if any) is required in the third (and final) section of the keybind.
#          It should be seperated from the previous section (modifiers + key)
#          with a comma. A list of all available functions and their argument
#          types is listed below. Note, if no argument is required, then there
#          is no need for a comma after your function (inside the quotes, a
#          comma is still required at the end of line).
#
#       4) Argument. This is the information that will be passed to the
#          function in the third field (if an argument is required by that
#          function). Make sure these values are of the correct type listed
#          by your chosen function, else the bind could be invalidated when
#          dwm attempts to parse it, or it could lead to logical errors.
#
#       Example formats:
#               "Main Key, Function, Argument"
#               "Modifier + Main Key, Function, Argument"
#               "Modifier + Modifier + Main Key, Function, Argument"
#               "Modifier + Modifier + Modifier + Main Key, Function, Argument"
#               "Modifier + Main Key, Function (doesn't require argument)"
#               "Main Key, Function (doesn't require argument)"
#
# Available modifiers:
#       "shift",
#       "caps" or "capslock",
#       "ctrl" or "control",
#       "alt" or "mod1",
#       "super" or "mod4",
#       "mod2",
#       "mod3",
#       "mod5",
#
# Available functions:
#
#        focusmon               // Integer Argument ( -99 to 99 )
#        focusstack             // Integer Argument ( -99 to 99 )
#        incnmaster             // Integer Argument ( -99 to 99 )
#        killclient             // No Argument
#        movemouse              // No Argument
#        quit                   // No Argument
#        resizemouse            // No Argument
#        setlayout-tiled        // No Argument
#        setlayout-floating     // No Argument
#        setlayout-monocle      // No Argument
#        setlayout-toggle       // No Argument
#        setmfact               // Float Argument ( -0.95 to 1.95 (values over 1 set mfact absolutely))
#        spawn                  // String Argument
#        tag                    // Integer Argument ( -1 to 2^9 (assuming 9 tags) )
#        tagmon                 // Integer Argument ( -99 to 99 )
#        togglebar              // No Argument
#        togglefloating         // No Argument
#        toggletag              // Integer Argument ( -1 to 2^9 (assuming 9 tags) )
#        toggleview             // Integer Argument ( -1 to 2^9 (assuming 9 tags) )
#        view                   // Integer Argument ( -1 to 2^9 (assuming 9 tags) )
#        zoom                   // No Argument
#
keybinds = (
        # Misc
        "Alt + P, spawn, dmenu_run -fn monospace:size=10 -nb #222222 -nf #bbbbbb -sb #005577 -sf #eeeeee",
        "Alt + Shift + Return, spawn, st",
        "Alt + B, togglebar",
        "Alt + J, focusstack, +1",
        "Alt + K, focusstack, -1",
        "Alt + I, incnmaster, +1",
        "Alt + D, incnmaster, -1",
        "Alt + H, setmfact, -0.05",
        "Alt + L, setmfact, +0.05",
        "Alt + Return, zoom",
        "Alt + Tab, view, 0",
        "Alt + Shift + C, killclient",
        "Alt + t, setlayout-tiled",
        "Alt + f, setlayout-floating",
        "Alt + m, setlayout-monocle",
        "Alt + space, setlayout-toggle",
        "Alt + Shift + space, togglefloating",
        "Alt + comma, focusmon, -1",
        "Alt + period, focusmon, +1",
        "Alt + Shift + comma, tagmon, -1",
        "Alt + Shift + period, tagmon, +1",
        "Alt + Shift + Q, quit",

        # Tags
        "Alt + 1, view, 1",
        "Alt + Control + 1, toggleview, 1",
        "Alt + Shift + 1, tag, 1",
        "Alt + Control + Shift + 1, toggletag, 1",

        "Alt + 2, view, 2",
        "Alt + Control + 2, toggleview, 2",
        "Alt + Shift + 2, tag, 2",
        "Alt + Control + Shift + 2, toggletag, 2",

        "Alt + 3, view, 4",
        "Alt + Control + 3, toggleview, 4",
        "Alt + Shift + 3, tag, 4",
        "Alt + Control + Shift + 3, toggletag, 4",

        "Alt + 4, view, 8",
        "Alt + Control + 4, toggleview, 8",
        "Alt + Shift + 4, tag, 8",
        "Alt + Control + Shift + 4, toggletag, 8",

        "Alt + 5, view, 16",
        "Alt + Control + 5, toggleview, 16",
        "Alt + Shift + 5, tag, 16",
        "Alt + Control + Shift + 5, toggletag, 16",

        "Alt + 6, view, 32",
        "Alt + Control + 6, toggleview, 32",
        "Alt + Shift + 6, tag, 32",
        "Alt + Control + Shift + 6, toggletag, 32",

        "Alt + 7, view, 64",
        "Alt + Control + 7, toggleview, 64",
        "Alt + Shift + 7, tag, 64",
        "Alt + Control + Shift + 7, toggletag, 64",

        "Alt + 8, view, 128",
        "Alt + Control + 8, toggleview, 128",
        "Alt + Shift + 8, tag, 128",
        "Alt + Control + Shift + 8, toggletag, 128",

        "Alt + 9, view, 256",
        "Alt + Control + 9, toggleview, 256",
        "Alt + Shift + 9, tag, 256",
        "Alt + Control + Shift + 9, toggletag, 256",

        "Alt + 0, view, -1",
        "Alt + Shift + 0, tag, -1"
);

# Buttonbinds follow a very similar structure to the above keybinds.
# Read how the keybinds work before reading the below, it is necessary context.
#
# Buttonbinds only differ in 2 ways.
#       1) The Main Key has been replaced by a Button instead
#       2) An extra element (second, directly after Modifiers + Button)
#          has been added, and defines what on screen the cursor needs
#          to be hovering over to use the bind.
#
# Example formats:
#       "Button, Clickable, Function, Argument"
#       "Modifier + Button, Clickable, Function, Argument"
#       "Modifier + Modifier + Button, Clickable, Function, Argument"
#       "Modifier + Modifier + Modifier + Button, Clickable, Function, Argument"
#       "Modifier + Button, Clickable, Function (doesn't require argument)"
#       "Button, Clickable, Function (doesn't require argument)"
#
# Available Buttons:
#       "leftclick" or "left-click",
#       "middleclick" or "middle-click",
#       "rightclick" or "right-click",
#       "scrollup" or "scroll-up",
#       "scrolldown" or "scroll-down",
#
#       Or any integer 1-255. Use xev to see what you need.
#
# Available Clickable Elements:
#       "tag",
#       "layout",
#       "status",
#       "title",
#       "window",
#       "desktop",

buttonbinds = (
        "leftclick, layout, setlayout-toggle",
        "rightclick, layout, setlayout-monocle",
        "middleclick, title, zoom",
        "middleclick, status, spawn, st",
        "alt + leftclick, window, movemouse",
        "alt + middleclick, window, togglefloating",
        "alt + rightclick, window, resizemouse",
        "leftclick, tag, view, 0",
        "rightclick, tag, toggleview, 0",
        "alt + leftclick, tag, tag, 0",
        "alt + rightclick, tag, toggletag, 0"
);

################################
##          General           ##
################################

# Default: true
showbar = true;

# Default: true
topbar = true;

# Default: true
resizehints = true;

# Default: true
lockfullscreen = true;

# Default: 1, Min: 0, Max: 9999
borderpx = 1;

# Default: 32, Min: 0, Max: 9999
snap = 32;

# Default: 1, Min: 0, Max: 99
nmaster = 1;

# Default: 120, Min: 0, Max: 9999
refreshrate = 120;

# Default: 0.55, Min: 0.05, Max: 0.95
mfact = 0.55;

################################
##          Advanced          ##
################################

# Default: 4, Min: 1, Max: 10
#
# This defines the max number of keys + modifiers for
# a key/buttonbind. 1 main key/button + X Modifiers.
# Default value of 4 means 1 main key/button and 3 modifiers.
max-keys = 4;